import{s as pe,e as a,a as o,c as s,o as l,g as r,i as n,n as O,f as i}from"./K7xFkt5i.js";import{S as ce,i as de}from"./Dqzh2twG.js";function fe(ue){let u,Q="Project Overview",L,p,K="The GoTM CLI Task Manager is a Go-based application that seamlessly combines a traditional command-line interface (CLI) with an engaging terminal user interface (TUI). It is engineered for speed and efficiency, leveraging Go’s robust concurrency model to manage tasks in real time, making it ideal for power users who demand both performance and interactivity.",H,c,J="Technologies Used",G,d,N="<li><strong>Go:</strong> The core language, chosen for its simplicity, type safety, and native support for concurrency through goroutines and channels.</li> <li><strong>Bubble Tea:</strong> This library powers the TUI, providing a fluid and responsive user experience with a focus on minimalism and ease of navigation.</li> <li><strong>Cobra/Viper:</strong> These libraries underpin the CLI, offering robust command parsing, argument handling, and configuration management, ensuring a comprehensive and user-friendly command-line experience.</li> <li><strong>SQLite:</strong> A lightweight, embedded database that ensures reliable and persistent storage of task data.</li>",P,f,W="Development Process",M,h,X="Development began by establishing a strong CLI foundation using Cobra and Viper, which enabled the rapid implementation of essential task operations. The TUI was later built with Bubble Tea to provide a visually appealing, interactive interface. A key focus has been on harnessing Go’s concurrency capabilities—using goroutines and channels—to handle asynchronous operations such as background task processing and database synchronization without sacrificing performance.",U,m,Y="Key Features and Goals",j,v,Z="<li><strong>Dual Interface:</strong> Support for both a traditional CLI and an interactive TUI, catering to diverse user preferences.</li> <li><strong>Concurrent Operations:</strong> Efficient task handling via Go’s goroutines and channels, ensuring real-time responsiveness even during intensive processing.</li> <li><strong>Persistent Task Management:</strong> Reliable storage and retrieval of tasks using SQLite, making it easy to save, load, and update your task list.</li> <li><strong>Robust CLI Experience:</strong> Powered by Cobra and Viper, the CLI supports a full range of commands—from adding and editing to deleting tasks—along with extensive configuration options.</li>",q,g,$="Future Aspirations",S,C,ee="Looking ahead, plans include integrating the task manager with popular cloud-based task services, enhancing customization with user-defined keybindings, and further optimizing the concurrent processing model. These improvements aim to create a scalable tool that adapts to the evolving needs of users.",z,x,te="Challenges and Solutions",B,b,ne="Combining both CLI and TUI interfaces while maintaining efficient concurrent operations poses unique challenges. By leveraging Go’s native concurrency and robust libraries like Bubble Tea and Cobra/Viper, the project addresses issues related to state management, asynchronous processing, and real-time UI updates, ensuring a smooth and responsive experience.",V,y,ie="Project Timeline and Commitment",A,k,ae="Currently in active development, the project is focused on refining core functionalities and enhancing both interfaces. Regular updates are planned to expand features, improve concurrency handling, and integrate additional tools, ensuring that GoTM remains a cutting-edge solution for task management.",D,T,se="Conclusion",F,_,le="The GoTM CLI Task Manager exemplifies modern software design by combining the efficiency of Go’s concurrency with the versatility of dual interfaces. It is a practical, scalable solution for managing tasks in a terminal environment, merging the best of CLI and TUI experiences to enhance productivity.",R,w,oe="Contact Information",E,I,re="For questions, contributions, or feedback, please connect via the project's GitHub repository or the contact channels listed in the documentation.";return{c(){u=a("h2"),u.textContent=Q,L=o(),p=a("p"),p.textContent=K,H=o(),c=a("h2"),c.textContent=J,G=o(),d=a("ul"),d.innerHTML=N,P=o(),f=a("h2"),f.textContent=W,M=o(),h=a("p"),h.textContent=X,U=o(),m=a("h3"),m.textContent=Y,j=o(),v=a("ul"),v.innerHTML=Z,q=o(),g=a("h2"),g.textContent=$,S=o(),C=a("p"),C.textContent=ee,z=o(),x=a("h2"),x.textContent=te,B=o(),b=a("p"),b.textContent=ne,V=o(),y=a("h2"),y.textContent=ie,A=o(),k=a("p"),k.textContent=ae,D=o(),T=a("h2"),T.textContent=se,F=o(),_=a("p"),_.textContent=le,R=o(),w=a("h2"),w.textContent=oe,E=o(),I=a("p"),I.textContent=re},l(e){u=s(e,"H2",{"data-svelte-h":!0}),l(u)!=="svelte-1jzqkyq"&&(u.textContent=Q),L=r(e),p=s(e,"P",{"data-svelte-h":!0}),l(p)!=="svelte-frrtor"&&(p.textContent=K),H=r(e),c=s(e,"H2",{"data-svelte-h":!0}),l(c)!=="svelte-hdkc2v"&&(c.textContent=J),G=r(e),d=s(e,"UL",{"data-svelte-h":!0}),l(d)!=="svelte-3hjcp0"&&(d.innerHTML=N),P=r(e),f=s(e,"H2",{"data-svelte-h":!0}),l(f)!=="svelte-10lp27a"&&(f.textContent=W),M=r(e),h=s(e,"P",{"data-svelte-h":!0}),l(h)!=="svelte-6penr6"&&(h.textContent=X),U=r(e),m=s(e,"H3",{"data-svelte-h":!0}),l(m)!=="svelte-1q02jyf"&&(m.textContent=Y),j=r(e),v=s(e,"UL",{"data-svelte-h":!0}),l(v)!=="svelte-1lcgdii"&&(v.innerHTML=Z),q=r(e),g=s(e,"H2",{"data-svelte-h":!0}),l(g)!=="svelte-77wxc0"&&(g.textContent=$),S=r(e),C=s(e,"P",{"data-svelte-h":!0}),l(C)!=="svelte-kk4bev"&&(C.textContent=ee),z=r(e),x=s(e,"H2",{"data-svelte-h":!0}),l(x)!=="svelte-1pdpefl"&&(x.textContent=te),B=r(e),b=s(e,"P",{"data-svelte-h":!0}),l(b)!=="svelte-6fan9i"&&(b.textContent=ne),V=r(e),y=s(e,"H2",{"data-svelte-h":!0}),l(y)!=="svelte-qyamik"&&(y.textContent=ie),A=r(e),k=s(e,"P",{"data-svelte-h":!0}),l(k)!=="svelte-140dubg"&&(k.textContent=ae),D=r(e),T=s(e,"H2",{"data-svelte-h":!0}),l(T)!=="svelte-grw4hp"&&(T.textContent=se),F=r(e),_=s(e,"P",{"data-svelte-h":!0}),l(_)!=="svelte-w10yit"&&(_.textContent=le),R=r(e),w=s(e,"H2",{"data-svelte-h":!0}),l(w)!=="svelte-3qdl6c"&&(w.textContent=oe),E=r(e),I=s(e,"P",{"data-svelte-h":!0}),l(I)!=="svelte-5c3crf"&&(I.textContent=re)},m(e,t){n(e,u,t),n(e,L,t),n(e,p,t),n(e,H,t),n(e,c,t),n(e,G,t),n(e,d,t),n(e,P,t),n(e,f,t),n(e,M,t),n(e,h,t),n(e,U,t),n(e,m,t),n(e,j,t),n(e,v,t),n(e,q,t),n(e,g,t),n(e,S,t),n(e,C,t),n(e,z,t),n(e,x,t),n(e,B,t),n(e,b,t),n(e,V,t),n(e,y,t),n(e,A,t),n(e,k,t),n(e,D,t),n(e,T,t),n(e,F,t),n(e,_,t),n(e,R,t),n(e,w,t),n(e,E,t),n(e,I,t)},p:O,i:O,o:O,d(e){e&&(i(u),i(L),i(p),i(H),i(c),i(G),i(d),i(P),i(f),i(M),i(h),i(U),i(m),i(j),i(v),i(q),i(g),i(S),i(C),i(z),i(x),i(B),i(b),i(V),i(y),i(A),i(k),i(D),i(T),i(F),i(_),i(R),i(w),i(E),i(I))}}}class ve extends ce{constructor(u){super(),de(this,u,null,fe,pe,{})}}export{ve as default};
